C00A	000				jmp		start	skip around the variables
0000	001		i		dw		0		int i
0000	002		s		dw		0		int s
0000	003		a		dw		0		int a[]
0000	004		n		dw		0		
0000	005		zero	dw		0		constant value zero
0001	006		one		dw		1		constant value one
3000	007		ldit	dw		3000
0000	008		h		dw 		0		int h
B000	009		DO Nothing
302B	00A		start	load 			load array address	
4003	00B				store	a		
302F	00C				load			load array size
4004	00D				store	n		i = 0; s = 0
3005	00E				load	zero	
4001	00F				store	i
4002	010				store	s		
3004	011		loop	load	n		if(i>=n) goto xit
6001	012				sub		i		
E027	013				jmpl	xit
D027	014				jmpe	xit
3007	015		xit		load	ldit	from the instruction to add a[i]
5003	016				add		a
5001	017				add		i
4019	018				store	doit	plant the inst into the program
0000	019		x		dw  	0		x += a[i]
B000	01A		DO Nothing
4008	01B 			store	h
3002	01C				load	s		s -= a[i]
6008	01D				sub  				
E021	01E				jmpl	xit		if(s-h<0) s=h
D023	01F				jmpe	xit		if(s-h=0) jump
C023	020				jmp		xit		if(s-h>0) jump
3008	021				load	h
4002	022				store	s
3001	023				load	i		i += 1
5006	024				add		one		  
4001	025				store	i
C011	026				jmp				jump to start
3002	027		xit		load	s		print s
1800	028				printH
0000	029				halt	
B000	02A				Array Contents:
0000	02B		a[]	    dw		0		array address
0002	02C		2		dw		2		arrayvalue 2
0003	02D		3		dw		3		arrayvalue 3
0004	02E		4		dw		4		arrayvalue 4
0005	02F		5 		dw		5		arrayvalue 5
B000	Yujian Li		03/21/16		section 102		